<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Case Details - <%= caseId %></title>
    <link rel="stylesheet" href="/assets/css/side_menu.css">
    <link rel="stylesheet" href="/assets/css/case_details.css">
    <link rel="stylesheet" href="/assets/css/toast.css">
    <script src="/assets/js/components.js"></script>
    <script>
        window.CASE_ID = "<%= caseId %>";
    </script>
</head>
<body>
    <!-- Navigation Rail Component -->
    <div id="navRail"></div>

    <!-- Main Content -->
    <main class="main-content">
        <div class="content-container">
            <!-- Breadcrumb -->
            <nav class="breadcrumb">
                <a href="/aligners-cases" class="breadcrumb-item">Home</a>
                <span class="breadcrumb-separator">
                    <img src="/assets/images/breadcrumb-arrow.svg" alt="Breadcrumb Arrow">
                </span>
                <span class="breadcrumb-item active">Case Details <%= caseId %></span>
            </nav>

            <!-- Page Header -->
            <div class="page-header">
                <div class="page-header-left">
                    <div class="title-badges-row">
                        <h1 class="page-title"><%= caseId %></h1>
                        <div class="page-badges">
                            <span class="pill-badge badge-new-case" id="badgeStatus"><%= patient_details.category %></span>
                            <span class="pill-badge badge-<%= patient_details.status == 0 ? 'draft' : 'submitted' %>" id="badgeStatus"><%= patient_details.status == 0 ? 'Draft' : 'Submitted' %></span>
                        </div>
                    </div>
                    <div class="subtitle" id="submittedSubtitle">Last updated on <script>document.write(new Date('<%= patient_details.updated_at %>').toLocaleDateString('en-GB', {day: '2-digit', month: 'numeric', year: 'numeric'}));</script></div>
                </div>
                <div class="page-actions">
                    <% if (user && user.role === 'superadmin') { %>
                        <button class="btn btn-outline" id="addPlanBtn">Add Treatment Plan</button>
                    <% } %>
                    
                    <% if (patient_details.status == 0) { %>
                        <button class="btn btn-primary" id="updateCaseBtn">Update Case</button>
                    <% } else if (patient_details.status == 1 && user && user.role === 'superadmin') { %>
                        <button class="btn btn-primary" id="setDraftBtn">Set as Draft</button>
                    <% } %>
                </div>
            </div>

            <!-- Tabs -->
            <div class="tabs">
                <button class="tab active" data-tab="patient">Patient Details</button>
                <% if (patient_details.category === 'New Case') { %>
                    <button class="tab" data-tab="treatment">Treatment Details</button>
                    <button class="tab" data-tab="simulations">Simulations</button>
                <% } %>
                <button class="tab" data-tab="comments">Comments</button>
                <button class="tab" data-tab="attachments">Attachments</button>
            </div>

            <!-- Patient Details Panel -->
            <section class="tab-panel" id="panel-patient">
                <div class="patient-details-container">
                    <div class="patient-header">
                        <div class="avatar" id="patientAvatar"><%= patient_details.name.charAt(0) %></div>
                        <div class="identity">
                            <div class="name" id="patientName"><%= patient_details.name %></div>
                            <div class="patient-id" id="patientId">Patient ID: <%= patient_details.id %></div>
                        </div>
                    </div>
                    
                    <div class="patient-info-grid">
                        <div class="info-row">
                            <div class="info-item">
                                <label>Gender</label>
                                <span id="kvGender"><%= patient_details.gender %></span>
                            </div>
                            <div class="info-item">
                                <label>Date of Birth</label>
                                <span id="kvDob"><%= patient_details.dob ? new Date(patient_details.dob).toLocaleDateString('en-GB', {day: '2-digit', month: 'numeric', year: 'numeric'}) : '-' %></span>
                            </div>
                            <div class="info-item">
                                <label>Email</label>
                                <span id="kvEmail"><%= patient_details.email || '-' %></span>
                            </div>
                        </div>
                        <div class="info-row">
                            <div class="info-item">
                                <label>Treatment Brand</label>
                                <span id="kvBrand"><%= patient_details.treatment_brand || '-' %></span>
                            </div>
                            <div class="info-item">
                                <label>Category</label>
                                <span id="kvCategory"><%= patient_details.category || '-' %></span>
                            </div>
                            <div class="info-item">
                                <label>Custom SN</label>
                                <span id="kvCustomSn"><%= patient_details.custom_sn || '-' %></span>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Treatment Details Panel -->
            <section class="tab-panel hidden" id="panel-treatments">
                <!-- Clinical Data Section -->
                <div class="treatment-container">
                    <h3 class="treatment-section-title">Clinical Data</h3>
                    <div class="treatment-content">
                        <div class="treatment-field">
                            <label>Clinical Condition</label>
                            <span class="treatment-value">Spacing, Class II div 2</span>
                        </div>
                        <div class="treatment-row">
                            <div class="treatment-field">
                                <label>IPR</label>
                                <span class="treatment-value">As Recommended</span>
                            </div>
                            <div class="treatment-field">
                                <label>Attachments</label>
                                <span class="treatment-value">As Recommended</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Treatment Notes Section -->
                <div class="treatment-container">
                    <h3 class="treatment-section-title">Treatment Notes</h3>
                    <div class="treatment-content">
                        <div class="treatment-field">
                            <label>Notes</label>
                            <div class="treatment-notes">
                                <div class="notes-label">Customer's desire:</div>
                                <ul class="notes-list">
                                    <li>Arrange teeth</li>
                                    <li>Improve open bite</li>
                                    <li>Reduce protrusion</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section class="tab-panel hidden" id="panel-simulations">
                <div class="simulations-container">
                    <div class="simulation-plan">
                        <div class="plan-header">
                            <h2 class="plan-title">Plan 1</h2>
                            <span class="pill-badge badge-green" id="badgeStatus">Approved</span>
                            <button class="btn btn-revoke" id="revokeBtn">Revoke</button>
                        </div>
                        <!-- Example without badge:
                        <div class="plan-header no-badge">
                            <h2 class="plan-title">Plan 2</h2>
                        </div>
                        -->
                        <div class="plan-divider"></div>
                        <p class="plan-instruction">Please click the box to view simulation or download document.</p>
                        
                        <div class="simulation-details">
                            <div class="detail-item">
                                <label>Date Uploaded</label>
                                <span class="detail-value">23/07/2025</span>
                            </div>
                            
                            <div class="detail-item">
                                <label>Simulation URL</label>
                                <div class="url-field">
                                    <img src="/assets/images/external-link-icon.svg" alt="External Link" class="field-icon">
                                    <span class="url-text">https://dca.patientalignerplan.com/Viewer/show.html?mlink...</span>
                                </div>
                            </div>
                            
                            <div class="detail-item">
                                <label>IPR (*PDF)</label>
                                <div class="pdf-field">
                                    <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                    <span class="pdf-text">17350043-RKE-7808.pdf</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="simulations-container">
                    <div class="simulation-plan">
                        <div class="plan-header">
                            <h2 class="plan-title">Plan 2</h2>
                            <button class="btn btn-approve" id="approveBtn">Approve</button>
                        </div>
                        <!-- Example without badge:
                        <div class="plan-header no-badge">
                            <h2 class="plan-title">Plan 2</h2>
                        </div>
                        -->
                        <div class="plan-divider"></div>
                        <p class="plan-instruction">Please click the box to view simulation or download document.</p>
                        
                        <div class="simulation-details">
                            <div class="detail-item">
                                <label>Date Uploaded</label>
                                <span class="detail-value">23/07/2025</span>
                            </div>
                            
                            <div class="detail-item">
                                <label>Simulation URL</label>
                                <div class="url-field">
                                    <img src="/assets/images/external-link-icon.svg" alt="External Link" class="field-icon">
                                    <span class="url-text">https://dca.patientalignerplan.com/Viewer/show.html?mlink...</span>
                                </div>
                            </div>
                            
                            <div class="detail-item">
                                <label>IPR (*PDF)</label>
                                <div class="pdf-field">
                                    <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                    <span class="pdf-text">17350043-RKE-7808.pdf</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                
            </section>
            <section class="tab-panel hidden" id="panel-comments">
                <div class="comments-section">
                    <!-- Comment Item 1 -->
                    <div class="comment-container">
                        <div class="comment-item">
                            <div class="comment-avatar">K</div>
                            <div class="comment-content">
                                <div class="comment-header">
                                    <span class="comment-author">Khoo Ming Sheng</span>
                                    <span class="comment-time">07/09/2025 10:52</span>
                                </div>
                                <div class="comment-text">
                                    Pls fabricate ULT+ UL set 1-5 +before model<br>
                                    Use DCA Lab<br>
                                    ETD before 21 October 2024
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Comment Item 2 -->
                    <div class="comment-container">
                        <div class="comment-item">
                            <div class="comment-avatar">K</div>
                            <div class="comment-content">
                                <div class="comment-header">
                                    <span class="comment-author">Khoo Ming Sheng</span>
                                    <span class="comment-time">07/09/2025 14:02</span>
                                </div>
                                <div class="comment-text">
                                    Pls fabricate UL set 6-18<br>
                                    Use DCA Lab<br>
                                    ETD before 17 November 2024
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Comment Input Section -->
                    <div class="comment-input-section">
                        <label class="comment-label">Comment</label>
                        <div class="comment-input-container">
                            <textarea class="comment-input" placeholder="Post a comment here"></textarea>
                            <button class="btn btn-primary comment-submit">Send</button>
                        </div>
                    </div>
                </div>
            </section>
            <section class="tab-panel hidden" id="panel-attachments">
                <div class="loading">Loading attachments...</div>
            </section>
        </div>
    </main>

    <!-- Photo Modal -->
    <div id="photoModal" class="photo-modal">
        <div class="photo-modal-content">
            <div class="photo-modal-header">
                <h3 class="photo-modal-title">View Image(s)</h3>
                <span class="photo-modal-close">
                    <img src="/assets/images/close-modal-icon.svg" alt="Close" style="width: 16px; height: 16px;">
                </span>
            </div>
            <div class="photo-modal-body">
                <div class="photo-modal-layout">
                    <div class="photo-modal-main-image">
                        <img id="modalMainImage" src="" alt="Selected Image">
                    </div>
                    <div class="photo-modal-thumbnails">
                        <p>Select an image to enlarge:</p>
                        <div class="photo-modal-thumbnail-grid" id="photoThumbnails">
                            <!-- Thumbnails will be populated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Approve Treatment Plan Modal -->
    <div class="modal-overlay" id="approveModal">
        <div class="modal-dialog">
            <div class="modal-header activate-modal-header">
                <h3 class="modal-title">Confirm to Approve?</h3>
                <button class="modal-close" id="closeApproveModal">
                    <img src="/assets/images/x-icon.svg" alt="Close">
                </button>
            </div>
            <div class="modal-body">
                <p class="modal-message">You won't be able to approve another plan while the initial plan remains active. Please contact our admin to revoke current plan if you wish to make changes.</p>
            </div>
            <div class="modal-actions">
                <button class="modal-btn modal-btn-cancel" id="cancelApprove">Cancel</button>
                <button class="modal-btn modal-btn-confirm" id="confirmApprove">Yes, Approve</button>
            </div>
        </div>
    </div>

     <!-- Revoke Treatment Plan Modal -->
     <div class="modal-overlay" id="revokeModal">
        <div class="modal-dialog">
            <div class="modal-header activate-modal-header">
                <h3 class="modal-title">Confirm to Revoke?</h3>
                <button class="modal-close" id="closeRevokeModal">
                    <img src="/assets/images/x-icon.svg" alt="Close">
                </button>
            </div>
            <div class="modal-body">
                <p class="modal-message">Doctor will need to select and approve the new treatment plan again.</p>
            </div>
            <div class="modal-actions">
                <button class="modal-btn modal-btn-cancel" id="cancelRevoke">Cancel</button>
                <button class="modal-btn modal-btn-confirm" id="confirmRevoke">Yes, Revoke</button>
            </div>
        </div>
    </div>
    <script src="/assets/js/jquery.js"></script>
    <script src="/assets/js/axios.min.js"></script>
    <script src="/assets/js/toast.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            loadComponent('navRail', '/components/side-menu');

            const created_at = '<%= patient_details.created_at %>';
            const approveModal = document.getElementById('approveModal');
            const approveBtn = document.getElementById('approveBtn');
            const cancelApprove = document.getElementById('cancelApprove');
            const confirmApprove = document.getElementById('confirmApprove');
            const closeApproveModal = document.getElementById('closeApproveModal');

            const revokeModal = document.getElementById('revokeModal');
            const revokeBtn = document.getElementById('revokeBtn');
            const cancelRevoke = document.getElementById('cancelRevoke');
            const confirmRevoke = document.getElementById('confirmRevoke');
            const closeRevokeModal = document.getElementById('closeRevokeModal');

            approveBtn.addEventListener('click', () => {
                approveModal.classList.add('show');
            });

            // Close modal functions
            function closeApproveModalDialog() {
                approveModal.classList.remove('show');
            }
            
            cancelApprove.addEventListener('click', closeApproveModalDialog);
            
            confirmApprove.addEventListener('click', closeApproveModalDialog);
            approveModal.addEventListener('click', (e) => {
                if (e.target === approveModal) {
                    closeApproveModalDialog();
                }
            });

            closeApproveModal.addEventListener('click', closeApproveModalDialog);

            revokeBtn.addEventListener('click', () => {
                revokeModal.classList.add('show');
            });

            // Close modal functions
            function closeModalDialog() {
                revokeModal.classList.remove('show');
            }
            
            cancelRevoke.addEventListener('click', closeModalDialog);
            
            confirmRevoke.addEventListener('click', closeModalDialog);
            revokeModal.addEventListener('click', (e) => {
                if (e.target === revokeModal) {
                    closeModalDialog();
                }
            });

            closeRevokeModal.addEventListener('click', closeModalDialog);

            // Add treatment plan button
            const addPlanBtn = document.getElementById('addPlanBtn');
            if (addPlanBtn) {
                addPlanBtn.addEventListener('click', () => {
                    window.location.href = `/add-treatment-plan/${window.CASE_ID}`;
                });
            }

            // Update case button
            const updateCaseBtn = document.getElementById('updateCaseBtn');
            if (updateCaseBtn) {
                updateCaseBtn.addEventListener('click', () => {
                    if('<%= patient_details.category %>' === 'New Case') {
                        window.location.href = `/update-case/${window.CASE_ID}`;
                    } else {
                        window.location.href = `/update-case-stl/${window.CASE_ID}`;
                    }
                });
            }

            // Set as draft button
            const setDraftBtn = document.getElementById('setDraftBtn');
            if (setDraftBtn) {
                setDraftBtn.addEventListener('click', async () => {
                    try {
                        const response = await axios.post(`/cases/${window.CASE_ID}/set-draft`)
                        .then(response => {
                            Toast.success(response.data.message);
                            window.location.reload();

                        })
                        .catch(error => {
                            console.error('Failed to set case as draft', error);
                            Toast.error(error.response.data.message || 'Failed to set case as draft');
                        });

                        
                    } catch (error) {
                        console.error('Error setting case as draft:', error);
                        Toast.error(error.response.data.message || 'Failed to set case as draft');
                    }
                });
            }

            // Tab switching functionality
            const tabEls = document.querySelectorAll('.tab');
            const panels = {
                patient: document.getElementById('panel-patient'),
                treatment: document.getElementById('panel-treatments'),
                simulations: document.getElementById('panel-simulations'),
                comments: document.getElementById('panel-comments'),
                attachments: document.getElementById('panel-attachments'),
            };
            
            tabEls.forEach(btn => {
                btn.addEventListener('click', () => {
                    // Remove active class from all tabs
                    tabEls.forEach(b => b.classList.remove('active'));
                    // Add active class to clicked tab
                    btn.classList.add('active');
                    
                    // Show/hide panels
                    const tab = btn.getAttribute('data-tab');
                    Object.entries(panels).forEach(([key, el]) => {
                        if (!el) return;
                        el.classList.toggle('hidden', key !== tab);
                    });

                    // Fetch treatment details when treatment tab is clicked
                    if (tab === 'treatment') {
                        // Show loading state
                        const treatmentPanel = document.getElementById('panel-treatments');
                        treatmentPanel.innerHTML = '<div class="loading">Loading treatment details...</div>';

                        // Fetch treatment details
                        axios.get(`/get-patient-treatment-details?caseid=${window.CASE_ID}`)
                            .then(response => {
                                const data = response.data.patient_treatment_details;
                               
                                // Update treatment panel with fetched data
                                treatmentPanel.innerHTML = `
                                    <!-- Clinical Data Section -->
                                    <div class="treatment-container">
                                        <h3 class="treatment-section-title">Clinical Data</h3>
                                        <div class="treatment-content">
                                            <div class="treatment-field">
                                                <label>Clinical Condition</label>
                                                <span class="treatment-value">${(() => {
                                                    const conditions = [];
                                                    if (data[0].crowding == 1) conditions.push('Crowding');
                                                    if (data[0].deep_bite == 1) conditions.push('Deep Bite');
                                                    if (data[0].spacing == 1) conditions.push('Spacing');
                                                    if (data[0].narrow_arch == 1) conditions.push('Narrow Arch');
                                                    if (data[0].class_ii_div_1 == 1) conditions.push('Class II div 1');
                                                    if (data[0].class_ii_div_2 == 1) conditions.push('Class II div 2');
                                                    if (data[0].class_iii == 1) conditions.push('Class III');
                                                    if (data[0].open_bite == 1) conditions.push('Open Bite');
                                                    if (data[0].overjet == 1) conditions.push('Overjet');
                                                    if (data[0].anterior_crossbite == 1) conditions.push('Anterior Crossbite');
                                                    if (data[0].posterior_crossbite == 1) conditions.push('Posterior Crossbite');
                                                    if (data[0].others == 1) conditions.push('Others');
                                                    return conditions.length > 0 ? conditions.join(', ') : 'None';
                                                })()}</span>
                                            </div>
                                            <div class="treatment-row">
                                                <div class="treatment-field">
                                                    <label>IPR</label>
                                                    <span class="treatment-value">${data[0].ipr || '-'}</span>
                                                </div>
                                                <div class="treatment-field">
                                                    <label>Attachments</label>
                                                    <span class="treatment-value">${data[0].attachments || '-'}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Treatment Notes Section -->
                                    <div class="treatment-container">
                                        <h3 class="treatment-section-title">Treatment Notes</h3>
                                        <div class="treatment-content">
                                            <div class="treatment-field">
                                                <label>Notes</label>
                                                <div class="treatment-notes">
                                                    <div class="notes-content">${data[0].treatment_notes || '-'}</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            })
                            .catch(error => {
                                console.error('Error fetching treatment details:', error);
                                Toast.error(error.response.data.message || 'Failed to fetch treatment details');
                            });
                    }

                    // Fetch attachments when attachments tab is clicked
                    if (tab === 'attachments') {
                        // Show loading state
                        const attachmentsPanel = document.getElementById('panel-attachments');
                        attachmentsPanel.innerHTML = '<div class="loading">Loading attachments...</div>';

                        // Fetch attachments data
                        axios.get(`/get_patient_model?caseid=${window.CASE_ID}`)
                            .then(response => {
                                const {results, model_type, product, product_arrival_date} = response.data.patient_model_details;
                                console.log('files', results);
                                console.log('model_type', model_type);
                                console.log('product', product);
                                console.log('product_arrival_date', product_arrival_date);
                                // Group files by type
                                const filesByType = {
                                    'upper_scan': [],
                                    'lower_scan': [],
                                    'bite_scan': [],
                                    'front': [],
                                    'smiling': [],
                                    'right_side': [],
                                    'buccal_right': [],
                                    'buccal_center': [],
                                    'buccal_left': [],
                                    'buccal_top': [],
                                    'buccal_bottom': [],
                                    'xray': [],
                                    'other': []
                                };

                                results.forEach(file => {
                                    if (filesByType[file.file_type]) {
                                        filesByType[file.file_type].push(file);
                                    }
                                });

                                attachmentsPanel.innerHTML = generateAttachmentsHTML(filesByType, model_type, product, product_arrival_date);
                                
                                setupPhotoModal();
                            })
                            .catch(error => {
                                console.error('Error fetching attachments:', error);
                                Toast.error(error.response?.data?.message || 'Failed to fetch attachments');
                            });
                    }
                });
            });

            // Function to generate attachments HTML
            function generateAttachmentsHTML(filesByType, model_type, product, product_arrival_date) {
                const category = '<%= patient_details.category %>';
                let html = '';

                // Model Section
                html += `
                    <div class="attachments-container">
                        <div class="attachment-section">
                            <h3 class="attachment-section-title">Model</h3>
                            <p class="attachment-section-subtitle-with-link">Please click <a href="/download/models/${window.CASE_ID}" class="link" id="downloadModelsLink">here</a> to download all models.</p>
                            
                            <div class="model-info-grid">
                                <div class="model-info-item">
                                    <div class="model-type-label">Model Type</div>
                                    <div class="model-type-value">${model_type}</div>
                                </div>`;
                if (category === 'Upload STL') {
                    html += `
                                <div class="model-info-item">
                                    <div class="model-type-label">Submitted Date</div>
                                    <div class="model-type-value">${new Date ('<%= patient_details.updated_at %>').toLocaleDateString('en-GB', {day: '2-digit', month: '2-digit', year: 'numeric'})}</div>
                                </div>

              
                                <div class="model-info-item">
                                    <div class="model-type-label">Product</div>
                                    <div class="model-type-value">${product}</div>
                                </div>
                                
                                <div class="model-info-item">
                                    <div class="model-type-label">Product Arrival Date</div>
                                    <div class="model-type-value">${new Date(product_arrival_date).toLocaleDateString('en-GB', {day: '2-digit', month: '2-digit', year: 'numeric'})}</div>
                                </div>`;
                }

                html += `
                            </div>`;

                // Document files section based on category
                if (category === 'New Case') {
                    html += `
                            <div class="attachment-fields">`;
                    
                    // Upper Scan
                    if (filesByType.upper_scan.length > 0) {
                        html += `
                                <div class="attachment-field-group">
                                    <label class="attachment-field-label">Upper Scan</label>
                                    <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/upper_scan'" style="cursor: pointer;">
                                        <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                        <span class="attachment-filename">${filesByType.upper_scan[0].file_originalname || filesByType.upper_scan[0].file_name}</span>
                                        <div class="download-link" title="Download Upper Scan">
                                           
                                        </div>
                                    </div>
                                </div>`;
                    }
                    
                                         // Lower Scan
                     if (filesByType.lower_scan.length > 0) {
                         html += `
                                 <div class="attachment-field-group">
                                     <label class="attachment-field-label">Lower Scan</label>
                                     <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/lower_scan'" style="cursor: pointer;">
                                         <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                         <span class="attachment-filename">${filesByType.lower_scan[0].file_originalname || filesByType.lower_scan[0].file_name}</span>
                                         <div class="download-link" title="Download Lower Scan">
                                          
                                         </div>
                                     </div>
                                 </div>`;
                     }
                    
                                         // Bite Scan
                     if (filesByType.bite_scan.length > 0) {
                         html += `
                                 <div class="attachment-field-group">
                                     <label class="attachment-field-label">Bite Scan</label>
                                     <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/bite_scan'" style="cursor: pointer;">
                                         <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                         <span class="attachment-filename">${filesByType.bite_scan[0].file_originalname || filesByType.bite_scan[0].file_name}</span>
                                         <div class="download-link" title="Download Bite Scan">
                                            
                                         </div>
                                     </div>
                                 </div>`;
                     }
                    
                    html += `
                            </div>`;
                } else if (category === 'Upload STL') {
                    html += `
                            <span class="attachment-field-label documents-stl">Documents</span>
                            <div class="attachment-fields stl">`;
                    
                                         // Show all STL documents
                     const stlFiles = [...filesByType.upper_scan, ...filesByType.lower_scan, ...filesByType.bite_scan];
                     stlFiles.forEach(file => {
                         html += `
                                 <div class="attachment-field-group">
                                     <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/${file.file_type}'" style="cursor: pointer;">
                                         <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                         <span class="attachment-filename">${file.file_originalname || file.file_name}</span>
                                         <div class="download-link" title="Download ${file.file_type.replace('_', ' ').toUpperCase()}">
                                         </div>
                                     </div>
                                 </div>`;
                     });
                    
                    html += `
                            </div>`;
                }

                html += `
                        </div>
                    </div>`;

                // Clinical Photos Section (only for New Case)
                if (category === 'New Case') {
                      // Face photos row
                      const facePhotos = [...filesByType.front, ...filesByType.smiling, ...filesByType.right_side];
                      // Intraoral photos row
                    const intraoralPhotos = [...filesByType.buccal_right, ...filesByType.buccal_center, ...filesByType.buccal_left, ...filesByType.buccal_top, ...filesByType.buccal_bottom];
                    html += `
                    <div class="attachments-container">
                        <div class="attachment-section">
                            <h3 class="attachment-section-title">Clinical Photos</h3>`;
                            if (facePhotos.length > 0 || intraoralPhotos.length > 0) {
                                html += `
                                <p class="attachment-section-subtitle-with-link">Please click <a href="/download/photos/${window.CASE_ID}" class="link" id="downloadPhotosLink">here</a> to download all photos.</p>`;
                            } else {
                                html += `
                                <p class="attachment-section-subtitle">No file uploaded.</p>`;
                            }

                  
                    if (facePhotos.length > 0) {
                        html += `
                            <div class="attachment-files-row">`;
                        
                        facePhotos.forEach(file => {
                            html += `
                                <div class="attachment-file">
                                    <div class="attachment-file-overlay">
                                        <div class="attachment-file-overlay-icon">
                                            <img src="/assets/images/enlarge-picture.svg" alt="Enlarge" style="width: 18.75px; height: 18.751px;">
                                        </div>
                                    </div>
                                    <img src="${file.signedurl}" alt="${file.file_name}">
                                </div>`;
                        });
                        
                        html += `
                            </div>`;
                    }

                    
                    if (intraoralPhotos.length > 0) {
                        html += `
                            <div class="attachment-files-row">`;
                        
                        intraoralPhotos.forEach(file => {
                            html += `
                                <div class="attachment-file">
                                    <div class="attachment-file-overlay">
                                        <div class="attachment-file-overlay-icon">
                                            <img src="/assets/images/enlarge-picture.svg" alt="Enlarge" style="width: 18.75px; height: 18.751px;">
                                        </div>
                                    </div>
                                    <img src="${file.signedurl}" alt="${file.file_name}">
                                </div>`;
                        });
                        
                        html += `
                            </div>`;
                    }

                    html += `
                        </div>
                    </div>`;

                    // X-Ray Section
                    html += `
                    <div class="attachments-container">
                        <div class="attachment-section">
                            <h3 class="attachment-section-title">X-Ray</h3>`;
                          
                    
                    if (filesByType.xray.length > 0) {
                        html += `
                        <div class="attachment-fields">`;
                         filesByType.xray.forEach(file => {
                             html += `
                            
                                 <div class="attachment-field-group">
                                     <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/xray'" style="cursor: pointer;">
                                         <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                         <span class="attachment-filename">${file.file_originalname || file.file_name}</span>
                                         <div class="download-link" title="Download X-Ray">
                                            
                                         </div>
                                     </div>
                                 </div>
                              `;
                         });
                         html += `
                         </div>`;
                     } else {
                        html += `
                                <p class="attachment-section-subtitle">No file uploaded.</p>`;
                    }
                    
                    html += `
                        </div>
                    </div>`;

                    // Other Documents/Photos Section
                    html += `
                    <div class="attachments-container">
                        <div class="attachment-section">
                            <h3 class="attachment-section-title">Other Documents / Photos</h3>`;
                    
                        if (filesByType.other.length > 0) {
                            html += `
                            <div class="attachment-fields">`;
                            filesByType.other.forEach(file => {
                                html += `
                                 <div class="attachment-field-group">
                                     <div class="attachment-input-field" onclick="window.location.href='/download/file/${window.CASE_ID}/other'" style="cursor: pointer;">
                                         <img src="/assets/images/document-icon.svg" alt="Document" class="field-icon">
                                         <span class="attachment-filename">${file.file_originalname || file.file_name}</span>
                                         <div class="download-link" title="Download Other Document">
                                             
                                         </div>
                                     </div>
                                 </div>`;
                            });
                            html += `
                            </div>`;
                     } else {
                        html += `
                                <p class="attachment-section-subtitle">No file uploaded.</p>`;
                    }
                    
                    html += `
                            
                        </div>
                    </div>`;
                }

                return html;
            }
            
            // Global variables for photo modal
            let clinicalPhotoFiles = [];
            const photoModal = document.getElementById('photoModal');
            const modalMainImage = document.getElementById('modalMainImage');
            const photoThumbnails = document.getElementById('photoThumbnails');
            const modalClose = document.querySelector('.photo-modal-close');
            
            // Function to set up photo modal functionality
            function setupPhotoModal() {
                // Find the clinical photos section
                const clinicalPhotosSection = Array.from(document.querySelectorAll('.attachment-section-title')).find(
                    el => el.textContent.trim() === 'Clinical Photos'
                )?.closest('.attachment-section');
                
                // Reset the photo files array
                clinicalPhotoFiles = [];
                
                // Get all clinical photos if section exists
                if (clinicalPhotosSection) {
                    // Only select images that are direct children of .attachment-file, not the overlay icons
                    const clinicalPhotos = clinicalPhotosSection.querySelectorAll('.attachment-file > img');
                    clinicalPhotoFiles = Array.from(clinicalPhotos).map(img => {
                        return {
                            src: img.src,
                            alt: img.alt
                        };
                    });
                    
                    // Add click event to all clinical photos
                    clinicalPhotosSection.querySelectorAll('.attachment-file').forEach((photoElement, index) => {
                        photoElement.addEventListener('click', () => {
                            openPhotoModal(index);
                        });
                    });
                }
            }
            
            // Function to open modal with specific image
            function openPhotoModal(selectedIndex) {
                // Clear existing thumbnails
                photoThumbnails.innerHTML = '';
                
                // Create thumbnails for all images EXCEPT the selected one
                clinicalPhotoFiles.forEach((photo, index) => {
                    if (index !== selectedIndex) {
                        const thumbnail = document.createElement('div');
                        thumbnail.className = 'photo-modal-thumbnail';
                        thumbnail.setAttribute('tabindex', '0'); // Make focusable for keyboard navigation
                        
                        const thumbnailImg = document.createElement('img');
                        thumbnailImg.src = photo.src;
                        thumbnailImg.alt = photo.alt;
                        
                        thumbnail.appendChild(thumbnailImg);
                        photoThumbnails.appendChild(thumbnail);
                        
                        // Add click event to thumbnail
                        thumbnail.addEventListener('click', () => {
                            changeImage(index);
                        });
                        
                        // Add keyboard event for accessibility
                        thumbnail.addEventListener('keydown', (event) => {
                            if (event.key === 'Enter' || event.key === ' ') {
                                event.preventDefault();
                                changeImage(index);
                            }
                        });
                    }
                });
                
                // Set main image
                if (clinicalPhotoFiles[selectedIndex]) {
                    modalMainImage.src = clinicalPhotoFiles[selectedIndex].src;
                    modalMainImage.alt = clinicalPhotoFiles[selectedIndex].alt;
                }
                
                // Show modal
                photoModal.classList.add('active');
                
                // Set up keyboard navigation
                document.addEventListener('keydown', handleKeyNavigation);
            }
            
            // Function to change the displayed image
            function changeImage(index) {
                if (index < 0) {
                    index = clinicalPhotoFiles.length - 1;
                } else if (index >= clinicalPhotoFiles.length) {
                    index = 0;
                }
                
                // Get current displayed image index
                const currentImageSrc = modalMainImage.src;
                const currentIndex = clinicalPhotoFiles.findIndex(photo => photo.src === currentImageSrc);
                
                // Update main image
                modalMainImage.src = clinicalPhotoFiles[index].src;
                modalMainImage.alt = clinicalPhotoFiles[index].alt;
                
                // Rebuild thumbnail list: remove current image, add previous image back
                photoThumbnails.innerHTML = '';
                
                clinicalPhotoFiles.forEach((photo, i) => {
                    if (i !== index) { // Don't show the currently enlarged image
                        const thumbnail = document.createElement('div');
                        thumbnail.className = 'photo-modal-thumbnail';
                        thumbnail.setAttribute('tabindex', '0');
                        
                        const thumbnailImg = document.createElement('img');
                        thumbnailImg.src = photo.src;
                        thumbnailImg.alt = photo.alt;
                        
                        thumbnail.appendChild(thumbnailImg);
                        photoThumbnails.appendChild(thumbnail);
                        
                        // Add click event to thumbnail
                        thumbnail.addEventListener('click', () => {
                            changeImage(i);
                        });
                        
                        // Add keyboard event for accessibility
                        thumbnail.addEventListener('keydown', (event) => {
                            if (event.key === 'Enter' || event.key === ' ') {
                                event.preventDefault();
                                changeImage(i);
                            }
                        });
                    }
                });
            }
            
            // Handle keyboard navigation
            function handleKeyNavigation(event) {
                if (!photoModal.classList.contains('active')) return;
                
                const currentIndex = Array.from(document.querySelectorAll('.photo-modal-thumbnail')).findIndex(
                    thumb => thumb.classList.contains('active')
                );
                
                switch (event.key) {
                    case 'ArrowLeft':
                        event.preventDefault();
                        changeImage(currentIndex - 1);
                        break;
                    case 'ArrowRight':
                        event.preventDefault();
                        changeImage(currentIndex + 1);
                        break;
                    case 'Escape':
                        event.preventDefault();
                        photoModal.classList.remove('active');
                        document.removeEventListener('keydown', handleKeyNavigation);
                        break;
                }
            }
            
            // Set up modal close event listeners (these don't need to be recreated)
            modalClose.addEventListener('click', () => {
                photoModal.classList.remove('active');
                document.removeEventListener('keydown', handleKeyNavigation);
            });
            
            // Close modal when clicking outside of it
            window.addEventListener('click', (event) => {
                if (event.target === photoModal) {
                    photoModal.classList.remove('active');
                    document.removeEventListener('keydown', handleKeyNavigation);
                }
            });
        });
    </script>
</body>
</html>